[tox]
requires =
  tox-docker
envlist =
    coverage-clean,
    py35-{django22}-{sqlite,postgres},
    py36-{django22,django30,django31}-{sqlite,postgres},
    py37-{django22,django30,django31}-{sqlite,postgres},
    py38-{django22,django30,django31}-{sqlite,postgres},
    py39-{django11,django22,django30,django31}-{sqlite,postgres},
    coverage-report,
    py39-flake8

[testenv]
commands = coverage run --include='*/timezone_field/*' {envbindir}/django-admin.py test tests
deps =
    coverage
    djangorestframework>=3.0.0
    django11: django>=1.11.29,<2.0
    django22: django>=2.2.17,<2.3
    django30: django>=3.0.0,<3.1
    django31: django>=3.1.0,<3.2
    postgres: psycopg2-binary
setenv =
    PYTHONPATH = {toxinidir}
    DJANGO_SETTINGS_MODULE=tests.settings
    sqlite: TEST_DB_ENGINE=sqlite
    postgres: TEST_DB_ENGINE=postgres

[testenv:py{35,36,37,38,39}-{django11,django22,django30,django31}-postgres]
docker =
    db

[testenv:py39-flake8]
commands = flake8
deps = flake8

[testenv:coverage-clean]
commands = coverage erase

[testenv:coverage-report]
commands =
    coverage report
    coverage html

[docker:db]
image = docker.io/bitnami/postgresql:13-debian-10
# Environment variables are passed to the container. They are only
# available to that container, and not to the testenv, other
# containers, or as replacements in other parts of tox.ini
environment =
    POSTGRESQL_USERNAME=test_user
    POSTGRESQL_PASSWORD=test_user
    POSTGRESQL_DATABASE=timezone_field_tests
    POSTGRES_INITDB_ARGS=--encoding=UTF-8
ports =
    5599:5432/tcp
# The healthcheck ensures that tox-docker won't run tests until the
# container is up and the command finishes with exit code 0 (success)
healthcheck_cmd = PGPASSWORD=$POSTGRESQL_PASSWORD psql \
    --user=$POSTGRESQL_USERNAME --dbname=$POSTGRESQL_DATABASE \
    --host=127.0.0.1 --quiet --no-align --tuples-only \
    -1 --command="SELECT 1"
healthcheck_timeout = 1
healthcheck_retries = 30
healthcheck_interval = 1
healthcheck_start_period = 1